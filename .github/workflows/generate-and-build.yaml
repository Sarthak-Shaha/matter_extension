name: Build and Generate

on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
      board:
        required: true
        type: string
      board_extension:
        required: false
        type: string
      suffix:
        required: true
        type: string
      family:
        required: true
        type: string
      addAppComponent:
        required: false
        type: string
      removeAppComponent:
        required: false
        type: string
      optionalSlcParams:
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'true'
# TODO don't need to check out all submodules

      - name: Install tools
        uses: ./.github/actions/install-tools
      
      - name: Set up SiSDK
        run: |
          SISDK_ROOT=$(pwd)/third_party/simplicity_sdk
          echo "SISDK_ROOT=${SISDK_ROOT}" >> $GITHUB_ENV

      - name: Copy matter_extension to simplicity_sdk and set Matter Extension Environment Variable
        run: |
          mkdir -p ${SISDK_ROOT}/extension
          cd ..
          cp -r matter_extension ${SISDK_ROOT}/extension
          cp -r third_party/wifi_sdk ${SISDK_ROOT}/extension
          echo "MATTER_EXTN_ROOT=${SISDK_ROOT}extension/matter_extension" >> $GITHUB_ENV
          echo "WIFI_SDK_ROOT=${SISDK_ROOT}extension/wifi_sdk" >> $GITHUB_ENV
          echo "STUDIO_ADAPTER_PACK_PATH=/opt/silabs/zap-linux-x64" >> $GITHUB_ENV

      - name: SLC Trust
        run: |
          slc configuration --sdk ${SISDK_ROOT}
          slc signature trust --development-trust
          slc signature trust --extension-path "${MATTER_EXTN_ROOT}"
          slc signature trust --extension-path "${WIFI_SDK_ROOT}"
          slc signature trust --sdk ${SISDK_ROOT}

      - name: Default additional component string
        run: echo "ADD_APP_COMPONENT_STRING=--with ${{ inputs.board }}${{ inputs.board_extension }}" >> $GITHUB_ENV

      - name: Create string out of additional components
        if: ${{ inputs.addAppComponent != '' }}
        run: 
          echo "ADD_APP_COMPONENT_STRING=${ADD_APP_COMPONENT_STRING},${{ inputs.addAppComponent }}" >> $GITHUB_ENV

      - name: Create string out of removed components
        if: ${{ inputs.removeAppComponent != '' }}
        run: echo "REMOVE_APP_COMPONENT_STRING=--without ${{ inputs.removeAppComponent }}" >> $GITHUB_ENV

      - name: SLC Generate
        run: |
          slc generate --daemon -d ${MATTER_EXTN_ROOT}/${{ inputs.board }}/${{ inputs.app }}-${{ inputs.suffix }} -p $MATTER_EXTN_ROOT/slc/sample-app/${{ inputs.app }}/${{ inputs.family }}/${{ inputs.app }}-${{ inputs.suffix }}.slcp ${ADD_APP_COMPONENT_STRING} ${REMOVE_APP_COMPONENT_STRING} --generator-timeout=180

      - name: Build
        run: |
          make all -C ${MATTER_EXTN_ROOT}/${{ inputs.board }}/${{ inputs.app }}-${{ inputs.suffix }} -f ${{ inputs.app }}-${{ inputs.suffix }}.Makefile -j8

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.app }}-${{ inputs.suffix }} ${{ inputs.board }}
          path: ${MATTER_EXTN_ROOT}/${{ inputs.board }}/${{ inputs.app }}-${{ inputs.suffix }}/build/debug/${{ inputs.app }}-${{ inputs.suffix }}.s37
          